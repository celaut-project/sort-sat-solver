syntax = "proto3";
package gateway;
import "ipss.proto";

message Token {
    oneof oneOf {
        int32 value_int32 = 1;
        int64 value_int64 = 2;
        string value_string = 3;
    }   
}

// Hash Table ( IPDL ?)
message Hash {
    string hash = 1; // d5tr ...
    repeated string tag = 2; // SHA256 ...
    // Hash function specification can be applied. <- must be optional
}

message Empty {}

message Instance {
    ipss.Instance instance = 1;
    Token token = 2;
}

message ServiceExtended {
    oneof oneOf{
        Hash hash = 1;
        ipss.Service service = 2;
    }
    optional ipss.Configuration config = 3;
}

service Gateway {
    rpc StartService( ipss.Service) returns (Instance) {}
    rpc StartServiceWithExtended( stream ServiceExtended) returns (Instance) {}
    rpc StopService(Token) returns (Empty) {}
}