syntax = "proto3";
package gateway;
import "celaut.proto";

message Empty {}

message TokenMessage {
    string token = 1;
}

message Instance {
    optional celaut.Any.Metadata instance_meta = 1;
    celaut.Instance instance = 2;
    optional string token = 3;
}

message ServiceTransport {
    message ServiceWithMeta {
        celaut.Any.Metadata meta = 1;
        celaut.Service service = 2;
    }
    oneof oneOf{
        celaut.Any.Metadata.HashTag.Hash hash = 1;
        ServiceWithMeta service = 2;
    }
    optional celaut.Configuration config = 3;    
}


// GRPC.

message Buffer  {
    oneof oneof{    
        bytes chunk = 1;
        bytes separator = 2;
    }
}
service Gateway {
    rpc StartService( stream Buffer) returns ( stream Buffer) {} // ServiceTransport -> Instance
    rpc StopService(stream Buffer) returns (stream Buffer) {} // TokenMessage -> Empty
}